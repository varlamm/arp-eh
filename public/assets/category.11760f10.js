import{a as o}from"./axios.7b768d2b.js";import{d as f}from"./pinia.32c02ade.js";import{h as s,u as c}from"./main.f5ac513d.js";const y=(d=!1)=>{const h=d?window.pinia.defineStore:f,{global:r}=window.i18n;return h({id:"category",state:()=>({categories:[],currentCategory:{id:null,name:"",description:""},editCategory:null}),getters:{isEdit:e=>!!e.currentCategory.id},actions:{fetchCategories(e){return new Promise((a,i)=>{o.get("/api/v1/categories",{params:e}).then(t=>{this.categories=t.data.data,a(t)}).catch(t=>{s(t),i(t)})})},fetchCategory(e){return new Promise((a,i)=>{o.get(`/api/v1/categories/${e}`).then(t=>{this.currentCategory=t.data.data,a(t)}).catch(t=>{s(t),i(t)})})},addCategory(e){return new Promise((a,i)=>{o.post("/api/v1/categories",e).then(t=>{this.categories.push(t.data.data),c().showNotification({type:"success",message:r.t("settings.expense_category.created_message")}),a(t)}).catch(t=>{s(t),i(t)})})},updateCategory(e){return new Promise((a,i)=>{o.put(`/api/v1/categories/${e.id}`,e).then(t=>{if(t.data){let n=this.categories.findIndex(u=>u.id===t.data.data.id);this.categories[n]=e.categories,c().showNotification({type:"success",message:r.t("settings.expense_category.updated_message")})}a(t)}).catch(t=>{s(t),i(t)})})},deleteCategory(e){return new Promise(a=>{o.delete(`/api/v1/categories/${e}`).then(i=>{let t=this.categories.findIndex(g=>g.id===e);this.categories.splice(t,1),c().showNotification({type:"success",message:r.t("settings.expense_category.deleted_message")}),a(i)}).catch(i=>{s(i),console.error(i)})})}}})()};export{y as u};
